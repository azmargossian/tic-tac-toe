# -----Global Variables------

#create Game board using a list
board = ["-","-","-",
         "-","-","-",
         "-","-","-",]

#If game is still going
game_still_going = True

#Who won? or tie?
winner = None

#Who's turn is it?
current_player = "X"

def display_board():
  print (board[0] + " | " + board[1] + " | " + board[2])
  print (board[3] + " | " + board[4] + " | " + board[5])
  print (board[6] + " | " + board[7] + " | " + board[8])

#play a game of tic tac toe
def play_game():

  
  #display initial board
  display_board()
  
  #while the game is sitll goin
  while game_still_going:
  
  # handle single turn of arbitrary player
    handle_turn(current_player)
  
  #check if game has ended
    check_if_game_over()

  #flip to the other player
    flip_player()
  
  # The game has ended
  if winner == "X" or winner == "O":
    print(winner + " won")
  elif winner == None:
    print ("Tie.")

#handle single turn of arbitrary player
def handle_turn(player):
  
  print(player + "'s turn.")
  position = input("choose a position from 1-9: ")

  valid = False
  while not valid:

    while position not in ["1","2","3","4","5","6","7","8","9"]:
      position = input ("Invalid input. Choose a position form 1-9: ")
  
    position = int(position) -1
    
    if board[position] == "-":
      valid = True
    else:
      print("you cant go there. try again.")

  board[position] = player

  display_board()


def check_if_game_over():
    check_for_winner()
    check_if_tie()


def check_for_winner():
  
  #setup global variables
  global winner
  
  #check rows
  row_winner = check_rows()
  #check colums
  column_winner = check_columns()
  #check diagonals
  diagonal_winner = check_diagonals()
  
  #get the winenr
  if row_winner:
    winner = row_winner
  elif column_winner:
    winner = column_winner
  elif diagonal_winner:
    winner = diagonal_winner
  else:
    winner = None
  return



def check_rows():
  #setup global vairables
  global game_still_going
  #check if any of the rows have the same values and its not a dash
  row_1 = board[0] == board[1] == board [2] != "-"
  row_2 = board[3] == board[4] == board [5] != "-"
  row_3 = board[6] == board[7] == board [8] != "-"
  #if any row has a match, flag that there is a win
  if row_1 or row_2 or row_3:
      game_still_going = False
  #return the winner (X or O)
  if row_1:
     return board[0]
  if row_2:
     return board[3]
  if row_3:
     return board[6]
  return


def check_columns():
#setup global vairables
  global game_still_going
  #check if any of the columns have the same values and its not a dash
  column_1 = board[0] == board[3] == board [6] != "-"
  column_2 = board[1] == board[4] == board [7] != "-"
  column_3 = board[2] == board[5] == board [8] != "-"
  #if any column has a match, flag that there is a win
  if column_1 or column_2 or column_3:
      game_still_going = False
  #return the winner (X or O)
  if column_1:
     return board[0]
  if column_2:
     return board[1]
  if column_3:
     return board[2]
  return
  

def check_diagonals():
  #setup global vairables
  global game_still_going
  #check if any of the diagonals have the same values and its not a dash
  diagonal_1 = board[0] == board[4] == board [8] != "-"
  diagonal_2 = board[6] == board[4] == board [2] != "-"
 
  #if any diagonal has a match, flag that there is a win
  if diagonal_1 or diagonal_2:
      game_still_going = False
  #return the winner (X or O)
  if diagonal_1:
     return board[0]
  if diagonal_2:
     return board[6]
  return

def check_if_tie():
  global game_still_going
  if "-" not in board:
    game_still_going = False
  
  return


def flip_player():
  #global variable we need
  global current_player
  #if current player was X then change to O
  if current_player == "X":
    current_player = "O"
  #if current player was O then change to X
  elif  current_player =="O":
   current_player = "X"


  return


play_game()



#board
#display
#play game
#alternate turns
#check win
  #check rows
  #check compile
  #check diagonals
#check tie
#flip player
